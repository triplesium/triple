export module triple.ecs.v2:system;
import :fwd;
import :world;
import std;

namespace triple::ecs::v2 {

class SystemParam {
  public:
    virtual void init(World& world) {}
    virtual void update(World& world) {}
};

export template<class... Params>
class System {
  public:
    System(std::function<void(Params...)> func) : m_func(func) {}

    void run(World& world) {}

  private:
    std::function<void(Params...)> m_func;
    std::array<SystemParam*, sizeof...(Params)> m_params;
};

} // namespace triple::ecs::v2
